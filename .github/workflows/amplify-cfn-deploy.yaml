name: Amplify Gen 2 via CloudFormation

on:
  push: 
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-3
  STACK_NAME: amplify-hosting-eldi
  BRANCH_NAME: ${{ github.ref_name }}

jobs:
  provision-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure GitHub PAT secret exists in AWS
        id: sm
        shell: bash
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          SECRET_NAME: github/pat
        run: |
          set -euo pipefail
          if aws secretsmanager describe-secret --secret-id $SECRET_NAME >/dev/null 2>&1; then
            aws secretsmanager put-secret-value \
              --secret-id $SECRET_NAME \
              --secret-string "{\"token\":\"$GH_PAT\"}" >/dev/null
          else
            aws secretsmanager create-secret \
              --name $SECRET_NAME \
              --secret-string "{\"token\":\"$GH_PAT\"}" >/dev/null
          fi
          ARN=$(aws secretsmanager describe-secret --secret-id $SECRET_NAME --query ARN --output text)
          echo "arn=$ARN" >> "$GITHUB_OUTPUT"

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --stack-name $STACK_NAME \
            --template-file infra/amplify-hosting.yaml \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              RepoUrl=https://github.com/antonD24/ELDI-Dashboard \
              AppName=eldi-web \
              BranchName=${{ env.BRANCH_NAME }} \
              GithubSecretPATArn=${{ steps.sm.outputs.arn }}

      - name: Get Stack outputs
        id: cfn_outputs
        run: |
          APP_ID=$(aws cloudformation describe-stacks --stack-name $STACK_NAME \
            --query "Stacks[0].Outputs[?OutputKey=='AppId'].OutputValue" --output text)
          WEBHOOK_URL=$(aws cloudformation describe-stacks --stack-name $STACK_NAME \
            --query "Stacks[0].Outputs[?OutputKey=='WebHookUrl'].OutputValue" --output text)
          echo "app_id=$APP_ID" >> "$GITHUB_OUTPUT"
          echo "webhook_url=$WEBHOOK_URL" >> "$GITHUB_OUTPUT"

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci

      - name: Deploy Amplify back-end
        run: |
          export CI=1
          npx ampx pipeline-deploy \
            --appId "${{ steps.cfn_outputs.outputs.app_id }}" \
            --branchName "${{ env.BRANCH_NAME }}"

      - name: Trigger front-end build
        if: env.BRANCH_NAME == 'main'
        run: |
          APP_ID="${{ steps.cfn_outputs.outputs.app_id }}"
          BRANCH="${{ steps.cfn_outputs.outputs.branch_name || 'main' }}"
          aws amplify start-job \
            --app-id "$APP_ID" \
            --branch-name "$BRANCH" \
            --job-type RELEASE